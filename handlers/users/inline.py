from aiogram import types

from data.texts import Texts
from loader import dp

# –ì–ª–∞–≤–Ω–æ–µ -> –ö—É—Ä—Å—ã üíª -> –ü–æ–∏—Å–∫
@dp.inline_handler(text='')
async def search(query: types.InlineQuery):

    text = Texts().get('python')
    results = [types.InlineQueryResultArticle(
        id='1',
        title='Python. Django',
        thumb_url='https://telegra.ph/file/1ed2732d276af0a239ca1.png',
        description=text, #'–û—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. –û–û–ü. GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π. –°–æ–∑–¥–∞–Ω–∏–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π',
        input_message_content=types.InputTextMessageContent(
            message_text='course_Python#'
        )
    ),
        types.InlineQueryResultArticle(
            id='2',
            title='Flutter. Dart',
            thumb_url='https://telegra.ph/file/7aa34eeab125b70322d44.png',
            description='–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –ø–æ–¥ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã',
            input_message_content=types.InputTextMessageContent(
                message_text='course_Flutter#'
            )
        ),
        types.InlineQueryResultArticle(
            id='3',
            title='Php',
            thumb_url='https://telegra.ph/file/62bb42714b939611154db.png',
            description='–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ —è–∑—ã–∫–µ php',
            input_message_content=types.InputTextMessageContent(
                message_text='course_Php#'
            )
        )
    ]
    await query.answer(results, cache_time=1, is_personal=True)